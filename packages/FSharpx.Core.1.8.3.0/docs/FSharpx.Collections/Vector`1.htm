<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Frameset//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-frameset.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
  <head>
    <title>Vector&lt;T&gt; - FSharpx Documentation</title>
    <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"/>
    <link type="text/css" rel="stylesheet" href="../main.css"/>
    <script type="text/javascript" src="../js/jquery-1.3.2.min.js"></script>
    <script type="text/javascript" src="../js/jquery.scrollTo-min.js"></script>
    <script type="text/javascript" src="../js/navigation.js"></script>
    <script type="text/javascript" src="../js/example.js"></script>
  </head>
  <body><div id="namespaces">
	<h2 class="fixed">Namespaces</h2>
	<div class="scroll">
		<ul>
			<li>
          <a href="../FSharp.Control/index.htm">FSharp.Control</a>
      </li>
			<li>
          <a href="../FSharp.IO/index.htm">FSharp.IO</a>
      </li>
			<li>
          <a href="../FSharpx/index.htm">FSharpx</a>
      </li>
			<li>
          <a href="../FSharpx.Collections/index.htm" class="current">FSharpx.Collections</a>
      </li>
			<li>
          <a href="../FSharpx.Collections.Mutable/index.htm">FSharpx.Collections.Mutable</a>
      </li>
			<li>
          <a href="../FSharpx.Core/index.htm">FSharpx.Core</a>
      </li>
			<li>
          <a href="../FSharpx.DataStructures/index.htm">FSharpx.DataStructures</a>
      </li>
			<li>
          <a href="../FSharpx.Linq/index.htm">FSharpx.Linq</a>
      </li>
			<li>
          <a href="../Microsoft.FSharp.Collections/index.htm">Microsoft.FSharp.Collections</a>
      </li>
			<li>
          <a href="../Microsoft.FSharp.Control/index.htm">Microsoft.FSharp.Control</a>
      </li>
		</ul>
	</div>
</div><div id="types">
  <h2 class="fixed">Types in FSharpx.Collections</h2>
	<div class="scroll">
		<ul>
				<li>
            <a href="../FSharpx.Collections/ArrayModule.htm">ArrayModule</a>
        </li>
				<li>
            <a href="../FSharpx.Collections/ByteString.htm">ByteString</a>
        </li>
				<li>
            <a href="../FSharpx.Collections/ByteStringModule.htm">ByteStringModule</a>
        </li>
				<li>
            <a href="../FSharpx.Collections/Deque`1.htm">Deque&lt;T&gt;</a>
        </li>
				<li>
            <a href="../FSharpx.Collections/DequeModule.htm">DequeModule</a>
        </li>
				<li>
            <a href="../FSharpx.Collections/DictionaryModule.htm">DictionaryModule</a>
        </li>
				<li>
            <a href="../FSharpx.Collections/DList`1.htm">DList&lt;T&gt;</a>
        </li>
				<li>
            <a href="../FSharpx.Collections/DListModule.htm">DListModule</a>
        </li>
				<li>
            <a href="../FSharpx.Collections/Heap`1.htm">Heap&lt;T&gt;</a>
        </li>
				<li>
            <a href="../FSharpx.Collections/HeapModule.htm">HeapModule</a>
        </li>
				<li>
            <a href="../FSharpx.Collections/IPriorityQueue.htm">IPriorityQueue</a>
        </li>
				<li>
            <a href="../FSharpx.Collections/IPriorityQueue`1.htm">IPriorityQueue`1</a>
        </li>
				<li>
            <a href="../FSharpx.Collections/LazyList`1.htm">LazyList&lt;T&gt;</a>
        </li>
				<li>
            <a href="../FSharpx.Collections/LazyListModule.htm">LazyListModule</a>
        </li>
				<li>
            <a href="../FSharpx.Collections/List.htm">List</a>
        </li>
				<li>
            <a href="../FSharpx.Collections/Map.htm">Map</a>
        </li>
				<li>
            <a href="../FSharpx.Collections/NameValueCollectionModule.htm">NameValueCollectionModule</a>
        </li>
				<li>
            <a href="../FSharpx.Collections/NonEmptyList.htm">NonEmptyList</a>
        </li>
				<li>
            <a href="../FSharpx.Collections/NonEmptyList`1.htm">NonEmptyList&lt;a&gt;</a>
        </li>
				<li>
            <a href="../FSharpx.Collections/NonEmptyListSemigroup`1.htm">NonEmptyListSemigroup`1</a>
        </li>
				<li>
            <a href="../FSharpx.Collections/PriorityQueue.htm">PriorityQueue</a>
        </li>
				<li>
            <a href="../FSharpx.Collections/Queue`1.htm">Queue&lt;T&gt;</a>
        </li>
				<li>
            <a href="../FSharpx.Collections/QueueModule.htm">QueueModule</a>
        </li>
				<li>
            <a href="../FSharpx.Collections/RandomAccessList`1.htm">RandomAccessList&lt;T&gt;</a>
        </li>
				<li>
            <a href="../FSharpx.Collections/RandomAccessListModule.htm">RandomAccessListModule</a>
        </li>
				<li>
            <a href="../FSharpx.Collections/Seq.htm">Seq</a>
        </li>
				<li>
            <a href="../FSharpx.Collections/Set.htm">Set</a>
        </li>
				<li>
            <a href="../FSharpx.Collections/Vector`1.htm" class="current">Vector&lt;T&gt;</a>
        </li>
				<li>
            <a href="../FSharpx.Collections/VectorModule.htm">VectorModule</a>
        </li>
		</ul>
	</div>
</div>
    <div class="header">
		<p class="class"><strong>Type</strong> Vector&lt;T&gt;</p>
		<p><strong>Namespace</strong> FSharpx.Collections</p>
		<p><strong>Interfaces</strong> <span title="System.Collections.Generic.IEnumerable<T>">IEnumerable&lt;T&gt;</span></p>
	</div>
    <div class="sub-header">
			<div id="summary">Vector is an ordered linear structure implementing the inverse of the List signature,
(last, initial, conj) in place of (head, tail, cons). Indexed lookup or update
(returning a new immutable instance of Vector) of any element is O(log32n). Length is O(1).
Ordering is by insertion history.
Original F# adaptation from the clojure implementation by Steffen Forkmann. 
			</div>
		
		
		
			<h3 class="section">Properties</h3>
			<ul>
				<li><a href="../FSharpx.Collections/Vector`1.htm#Initial">Initial</a></li>
				<li><a href="../FSharpx.Collections/Vector`1.htm#IsEmpty">IsEmpty</a></li>
				<li><a href="../FSharpx.Collections/Vector`1.htm#Item">Item</a></li>
				<li><a href="../FSharpx.Collections/Vector`1.htm#Last">Last</a></li>
				<li><a href="../FSharpx.Collections/Vector`1.htm#Length">Length</a></li>
				<li><a href="../FSharpx.Collections/Vector`1.htm#TryInitial">TryInitial</a></li>
				<li><a href="../FSharpx.Collections/Vector`1.htm#TryLast">TryLast</a></li>
				<li><a href="../FSharpx.Collections/Vector`1.htm#TryUnconj">TryUnconj</a></li>
				<li><a href="../FSharpx.Collections/Vector`1.htm#Unconj">Unconj</a></li>
			</ul>
		
	</div>
	
	
	
	
  <h3 class="section">Public properties</h3>

  <div id="Initial" class="method">
    <h4><a href="../FSharpx.Collections/Vector`1.htm">Vector&lt;T&gt;</a> <strong>Initial</strong> get; </h4>
    <div class="content">O(1). Returns a new vector without the last item. If the collection is empty it throws an exception. 
      
    </div>
  </div>
  <div id="IsEmpty" class="method">
    <h4><span title="System.bool">bool</span> <strong>IsEmpty</strong> get; </h4>
    <div class="content">O(1). Returns true if the vector has no elements. 
      
    </div>
  </div>
  <div id="Item" class="method">
    <h4><span title="FSharpx.Collections.T">T</span> <strong>Item</strong> get; </h4>
    <div class="content">O(log32n). Returns vector element at the index. 
      
    </div>
  </div>
  <div id="Last" class="method">
    <h4><span title="FSharpx.Collections.T">T</span> <strong>Last</strong> get; </h4>
    <div class="content">O(1). Returns the last element in the vector. If the vector is empty it throws an exception. 
      
    </div>
  </div>
  <div id="Length" class="method">
    <h4><span title="System.int">int</span> <strong>Length</strong> get; </h4>
    <div class="content">O(1). Returns the number of items in the vector. 
      
    </div>
  </div>
  <div id="TryInitial" class="method">
    <h4><span title="Microsoft.FSharp.Core.FSharpOption<Vector<T>>">FSharpOption&lt;Vector&lt;T&gt;&gt;</span> <strong>TryInitial</strong> get; </h4>
    <div class="content">O(1). Returns option vector without the last item. 
      
    </div>
  </div>
  <div id="TryLast" class="method">
    <h4><span title="Microsoft.FSharp.Core.FSharpOption<T>">FSharpOption&lt;T&gt;</span> <strong>TryLast</strong> get; </h4>
    <div class="content">O(1). Returns option last element in the vector. 
      
    </div>
  </div>
  <div id="TryUnconj" class="method">
    <h4><span title="Microsoft.FSharp.Core.FSharpOption<Tuple<Vector<T>, T>>">FSharpOption&lt;Tuple&lt;Vector&lt;T&gt;, T&gt;&gt;</span> <strong>TryUnconj</strong> get; </h4>
    <div class="content">O(1). Returns option tuple last element and vector without last item 
      
    </div>
  </div>
  <div id="Unconj" class="method">
    <h4><span title="System.Tuple<Vector<T>, T>">Tuple&lt;Vector&lt;T&gt;, T&gt;</span> <strong>Unconj</strong> get; </h4>
    <div class="content">O(1). Returns tuple last element and vector without last item 
      
    </div>
  </div>
	<div id="footer">
  <p>Based on v1.8.3.0 of FSharpx</p>
  <p>Generated by <a href="http://docu.jagregory.com">docu</a></p>
</div>
  </body>
</html>