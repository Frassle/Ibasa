<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Frameset//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-frameset.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
  <head>
    <title>AutoCancelAgent&lt;T&gt; - FSharpx Documentation</title>
    <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"/>
    <link type="text/css" rel="stylesheet" href="../main.css"/>
    <script type="text/javascript" src="../js/jquery-1.3.2.min.js"></script>
    <script type="text/javascript" src="../js/jquery.scrollTo-min.js"></script>
    <script type="text/javascript" src="../js/navigation.js"></script>
    <script type="text/javascript" src="../js/example.js"></script>
  </head>
  <body><div id="namespaces">
	<h2 class="fixed">Namespaces</h2>
	<div class="scroll">
		<ul>
			<li>
          <a href="../FSharp.Control/index.htm" class="current">FSharp.Control</a>
      </li>
			<li>
          <a href="../FSharp.IO/index.htm">FSharp.IO</a>
      </li>
			<li>
          <a href="../FSharpx/index.htm">FSharpx</a>
      </li>
			<li>
          <a href="../FSharpx.Collections/index.htm">FSharpx.Collections</a>
      </li>
			<li>
          <a href="../FSharpx.Collections.Mutable/index.htm">FSharpx.Collections.Mutable</a>
      </li>
			<li>
          <a href="../FSharpx.Core/index.htm">FSharpx.Core</a>
      </li>
			<li>
          <a href="../FSharpx.DataStructures/index.htm">FSharpx.DataStructures</a>
      </li>
			<li>
          <a href="../FSharpx.Linq/index.htm">FSharpx.Linq</a>
      </li>
			<li>
          <a href="../Microsoft.FSharp.Collections/index.htm">Microsoft.FSharp.Collections</a>
      </li>
			<li>
          <a href="../Microsoft.FSharp.Control/index.htm">Microsoft.FSharp.Control</a>
      </li>
		</ul>
	</div>
</div><div id="types">
  <h2 class="fixed">Types in FSharp.Control</h2>
	<div class="scroll">
		<ul>
				<li>
            <a href="../FSharp.Control/AsyncExtensions.htm">AsyncExtensions</a>
        </li>
				<li>
            <a href="../FSharp.Control/AsyncSeq.htm">AsyncSeq</a>
        </li>
				<li>
            <a href="../FSharp.Control/AsyncSeqBuilder.htm">AsyncSeqBuilder</a>
        </li>
				<li>
            <a href="../FSharp.Control/AsyncSeqExtensions.htm">AsyncSeqExtensions</a>
        </li>
				<li>
            <a href="../FSharp.Control/AsyncSeqInner`1.htm">AsyncSeqInner&lt;T&gt;</a>
        </li>
				<li>
            <a href="../FSharp.Control/AutoCancelAgent`1.htm" class="current">AutoCancelAgent&lt;T&gt;</a>
        </li>
				<li>
            <a href="../FSharp.Control/BatchProcessingAgent`1.htm">BatchProcessingAgent&lt;T&gt;</a>
        </li>
				<li>
            <a href="../FSharp.Control/BlockingQueueAgent`1.htm">BlockingQueueAgent&lt;T&gt;</a>
        </li>
				<li>
            <a href="../FSharp.Control/CircularQueueAgent`1.htm">CircularQueueAgent&lt;T&gt;</a>
        </li>
				<li>
            <a href="../FSharp.Control/ConcurrentSetAgent`1.htm">ConcurrentSetAgent&lt;T&gt;</a>
        </li>
				<li>
            <a href="../FSharp.Control/ISubject`2.htm">ISubject&lt;TIn, TOut&gt;</a>
        </li>
				<li>
            <a href="../FSharp.Control/Observable.htm">Observable</a>
        </li>
				<li>
            <a href="../FSharp.Control/ObservableExtensions.htm">ObservableExtensions</a>
        </li>
				<li>
            <a href="../FSharp.Control/ObservableUpdate`1.htm">ObservableUpdate&lt;T&gt;</a>
        </li>
				<li>
            <a href="../FSharp.Control/ReplaySubject`1.htm">ReplaySubject&lt;T&gt;</a>
        </li>
				<li>
            <a href="../FSharp.Control/Seq.htm">Seq</a>
        </li>
				<li>
            <a href="../FSharp.Control/SlidingWindowAgent`1.htm">SlidingWindowAgent&lt;T&gt;</a>
        </li>
				<li>
            <a href="../FSharp.Control/Subject`1.htm">Subject&lt;T&gt;</a>
        </li>
				<li>
            <a href="../FSharp.Control/Tags.htm">Tags</a>
        </li>
		</ul>
	</div>
</div>
    <div class="header">
		<p class="class"><strong>Type</strong> AutoCancelAgent&lt;T&gt;</p>
		<p><strong>Namespace</strong> FSharp.Control</p>
		<p><strong>Interfaces</strong> <span title="System.IDisposable">IDisposable</span></p>
	</div>
    <div class="sub-header">
			<div id="summary">Wrapper for the standard F# agent (MailboxProcessor) that
supports stopping of the agent's body using the IDisposable
interface (the type automatically creates a cancellation token) 
			</div>
		
			<h3 class="section">Events</h3>
			<ul>
				<li><a href="../FSharp.Control/AutoCancelAgent`1.htm#Error">Error</a></li>
			</ul>
		
			<h3 class="section">Methods</h3>
			<ul>
				<li><a href="../FSharp.Control/AutoCancelAgent`1.htm#Post">Post</a></li>
				<li><a href="../FSharp.Control/AutoCancelAgent`1.htm#PostAndAsyncReply``1">PostAndAsyncReply&lt;a&gt;</a></li>
				<li><a href="../FSharp.Control/AutoCancelAgent`1.htm#PostAndReply``1">PostAndReply&lt;a&gt;</a></li>
				<li><a href="../FSharp.Control/AutoCancelAgent`1.htm#PostAndTryAsyncReply``1">PostAndTryAsyncReply&lt;a&gt;</a></li>
				<li><a href="../FSharp.Control/AutoCancelAgent`1.htm#Receive">Receive</a></li>
				<li><a href="../FSharp.Control/AutoCancelAgent`1.htm#Scan``1">Scan&lt;a&gt;</a></li>
				<li><a href="../FSharp.Control/AutoCancelAgent`1.htm#Start">Start</a></li>
				<li><a href="../FSharp.Control/AutoCancelAgent`1.htm#TryPostAndReply``1">TryPostAndReply&lt;a&gt;</a></li>
				<li><a href="../FSharp.Control/AutoCancelAgent`1.htm#TryReceive">TryReceive</a></li>
				<li><a href="../FSharp.Control/AutoCancelAgent`1.htm#TryScan``1">TryScan&lt;a&gt;</a></li>
			</ul>
		
			<h3 class="section">Properties</h3>
			<ul>
				<li><a href="../FSharp.Control/AutoCancelAgent`1.htm#CurrentQueueLength">CurrentQueueLength</a></li>
			</ul>
		
	</div>
	
  <h3 class="section">Events</h3>

  <div id="Error" class="method">
    <h4><strong>Error</strong></h4>
    <div class="content">
    </div>
  </div>
	
	<h3 class="section">Public instance methods</h3>
	
	<div id="Post" class="method">
		<h4><span title="System.void">void</span> <strong>Post</strong>(<span title="FSharp.Control.T">T</span> m)</h4>
		<div class="content">



      
    </div>
	</div>
	<div id="PostAndAsyncReply``1" class="method">
		<h4><span title="Microsoft.FSharp.Control.FSharpAsync<a>">FSharpAsync&lt;a&gt;</span> <strong>PostAndAsyncReply&lt;a&gt;</strong>(<span title="Microsoft.FSharp.Core.FSharpFunc<FSharpAsyncReplyChannel<a>, T>">FSharpFunc&lt;FSharpAsyncReplyChannel&lt;a&gt;, T&gt;</span> buildMessage, <span title="Microsoft.FSharp.Core.FSharpOption<int>">FSharpOption&lt;int&gt;</span> timeout)</h4>
		<div class="content">Posts a message to an agent and await a reply on the channel, asynchronously. 



      
    </div>
	</div>
	<div id="PostAndReply``1" class="method">
		<h4><span title="FSharp.Control.a">a</span> <strong>PostAndReply&lt;a&gt;</strong>(<span title="Microsoft.FSharp.Core.FSharpFunc<FSharpAsyncReplyChannel<a>, T>">FSharpFunc&lt;FSharpAsyncReplyChannel&lt;a&gt;, T&gt;</span> buildMessage, <span title="Microsoft.FSharp.Core.FSharpOption<int>">FSharpOption&lt;int&gt;</span> timeout)</h4>
		<div class="content">Posts a message to an agent and await a reply on the channel, synchronously. 



      
    </div>
	</div>
	<div id="PostAndTryAsyncReply``1" class="method">
		<h4><span title="Microsoft.FSharp.Control.FSharpAsync<FSharpOption<a>>">FSharpAsync&lt;FSharpOption&lt;a&gt;&gt;</span> <strong>PostAndTryAsyncReply&lt;a&gt;</strong>(<span title="Microsoft.FSharp.Core.FSharpFunc<FSharpAsyncReplyChannel<a>, T>">FSharpFunc&lt;FSharpAsyncReplyChannel&lt;a&gt;, T&gt;</span> buildMessage, <span title="Microsoft.FSharp.Core.FSharpOption<int>">FSharpOption&lt;int&gt;</span> timeout)</h4>
		<div class="content">Like PostAndAsyncReply, but returns None if no reply within the timeout period. 



      
    </div>
	</div>
	<div id="Receive" class="method">
		<h4><span title="Microsoft.FSharp.Control.FSharpAsync<T>">FSharpAsync&lt;T&gt;</span> <strong>Receive</strong>(<span title="Microsoft.FSharp.Core.FSharpOption<int>">FSharpOption&lt;int&gt;</span> timeout)</h4>
		<div class="content">Waits for a message. This will consume the first message in arrival order. 



      
    </div>
	</div>
	<div id="Scan``1" class="method">
		<h4><span title="Microsoft.FSharp.Control.FSharpAsync<a>">FSharpAsync&lt;a&gt;</span> <strong>Scan&lt;a&gt;</strong>(<span title="Microsoft.FSharp.Core.FSharpFunc<T, FSharpOption<FSharpAsync<a>>>">FSharpFunc&lt;T, FSharpOption&lt;FSharpAsync&lt;a&gt;&gt;&gt;</span> scanner, <span title="Microsoft.FSharp.Core.FSharpOption<int>">FSharpOption&lt;int&gt;</span> timeout)</h4>
		<div class="content">Scans for a message by looking through messages in arrival order until <c>scanner</c>
returns a Some value. Other messages remain in the queue. 



      
    </div>
	</div>
	<div id="TryPostAndReply``1" class="method">
		<h4><span title="Microsoft.FSharp.Core.FSharpOption<a>">FSharpOption&lt;a&gt;</span> <strong>TryPostAndReply&lt;a&gt;</strong>(<span title="Microsoft.FSharp.Core.FSharpFunc<FSharpAsyncReplyChannel<a>, T>">FSharpFunc&lt;FSharpAsyncReplyChannel&lt;a&gt;, T&gt;</span> buildMessage, <span title="Microsoft.FSharp.Core.FSharpOption<int>">FSharpOption&lt;int&gt;</span> timeout)</h4>
		<div class="content">Like PostAndReply, but returns None if no reply within the timeout period. 



      
    </div>
	</div>
	<div id="TryReceive" class="method">
		<h4><span title="Microsoft.FSharp.Control.FSharpAsync<FSharpOption<T>>">FSharpAsync&lt;FSharpOption&lt;T&gt;&gt;</span> <strong>TryReceive</strong>(<span title="Microsoft.FSharp.Core.FSharpOption<int>">FSharpOption&lt;int&gt;</span> timeout)</h4>
		<div class="content">Waits for a message. This will consume the first message in arrival order. 



      
    </div>
	</div>
	<div id="TryScan``1" class="method">
		<h4><span title="Microsoft.FSharp.Control.FSharpAsync<FSharpOption<a>>">FSharpAsync&lt;FSharpOption&lt;a&gt;&gt;</span> <strong>TryScan&lt;a&gt;</strong>(<span title="Microsoft.FSharp.Core.FSharpFunc<T, FSharpOption<FSharpAsync<a>>>">FSharpFunc&lt;T, FSharpOption&lt;FSharpAsync&lt;a&gt;&gt;&gt;</span> scanner, <span title="Microsoft.FSharp.Core.FSharpOption<int>">FSharpOption&lt;int&gt;</span> timeout)</h4>
		<div class="content">Scans for a message by looking through messages in arrival order until <c>scanner</c>
returns a Some value. Other messages remain in the queue. 



      
    </div>
	</div>
	
	<h3 class="section">Public static methods</h3>
	
	<div id="Start" class="method">
		<h4><a href="../FSharp.Control/AutoCancelAgent`1.htm">AutoCancelAgent&lt;T&gt;</a> <strong>Start</strong>(<span title="Microsoft.FSharp.Core.FSharpFunc<FSharpMailboxProcessor<T>, FSharpAsync<Unit>>">FSharpFunc&lt;FSharpMailboxProcessor&lt;T&gt;, FSharpAsync&lt;Unit&gt;&gt;</span> f)</h4>
		<div class="content">Start a new disposable agent using the specified body function
(the method creates a new cancellation token for the agent) 



      
    </div>
	</div>
	
  <h3 class="section">Public properties</h3>

  <div id="CurrentQueueLength" class="method">
    <h4><span title="System.int">int</span> <strong>CurrentQueueLength</strong> get; </h4>
    <div class="content">Returns the number of unprocessed messages in the message queue of the agent. 
      
    </div>
  </div>
	<div id="footer">
  <p>Based on v1.8.3.0 of FSharpx</p>
  <p>Generated by <a href="http://docu.jagregory.com">docu</a></p>
</div>
  </body>
</html>